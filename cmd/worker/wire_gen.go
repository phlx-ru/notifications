// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/go-kratos/kratos/v2/log"
	"notifications/internal/biz"
	"notifications/internal/conf"
	"notifications/internal/data"
	"notifications/internal/senders"
	"notifications/internal/worker"
)

// Injectors from wire.go:

func wireWorker(confData *conf.Data, sendersSenders *senders.Senders, logger log.Logger) (*worker.Worker, func(), error) {
	dataData, cleanup, err := data.NewData(confData, logger)
	if err != nil {
		return nil, nil, err
	}
	notificationRepo := data.NewNotificationRepo(dataData, logger)
	notificationUsecase := biz.NewNotificationUsecase(notificationRepo, sendersSenders, logger)
	workerWorker := newWorker(notificationUsecase, logger)
	return workerWorker, func() {
		cleanup()
	}, nil
}
