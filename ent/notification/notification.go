// Code generated by ent, DO NOT EDIT.

package notification

import (
	"notifications/ent/schema"
	"time"
)

const (
	// Label holds the string label denoting the notification type in the database.
	Label = "notification"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldSenderID holds the string denoting the sender_id field in the database.
	FieldSenderID = "sender_id"
	// FieldType holds the string denoting the type field in the database.
	FieldType = "type"
	// FieldPayload holds the string denoting the payload field in the database.
	FieldPayload = "payload"
	// FieldTTL holds the string denoting the ttl field in the database.
	FieldTTL = "ttl"
	// FieldStatus holds the string denoting the status field in the database.
	FieldStatus = "status"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldPlannedAt holds the string denoting the planned_at field in the database.
	FieldPlannedAt = "planned_at"
	// FieldRetries holds the string denoting the retries field in the database.
	FieldRetries = "retries"
	// FieldSentAt holds the string denoting the sent_at field in the database.
	FieldSentAt = "sent_at"
	// Table holds the table name of the notification in the database.
	Table = "notifications"
)

// Columns holds all SQL columns for notification fields.
var Columns = []string{
	FieldID,
	FieldSenderID,
	FieldType,
	FieldPayload,
	FieldTTL,
	FieldStatus,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldPlannedAt,
	FieldRetries,
	FieldSentAt,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultType holds the default value on creation for the "type" field.
	DefaultType schema.NotificationType
	// TypeValidator is a validator for the "type" field. It is called by the builders before save.
	TypeValidator func(string) error
	// DefaultStatus holds the default value on creation for the "status" field.
	DefaultStatus schema.NotificationStatus
	// StatusValidator is a validator for the "status" field. It is called by the builders before save.
	StatusValidator func(string) error
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
	// DefaultPlannedAt holds the default value on creation for the "planned_at" field.
	DefaultPlannedAt func() time.Time
	// DefaultRetries holds the default value on creation for the "retries" field.
	DefaultRetries int
)
