syntax = "proto3";

package notification.v1;

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";

option go_package = "notifications/api/notification/v1;v1";

service Notification {
  rpc Enqueue (SendRequest) returns (EnqueueResponse) {
    option (google.api.http) = {
      post: "/enqueue"
      body: "*"
    };
  }

  rpc Send (SendRequest) returns (SendResponse) {
    option (google.api.http) = {
      post: "/send"
      body: "*"
    };
  }

  rpc Check (CheckRequest) returns (CheckResponse) {
    option (google.api.http) = {
      post: "/check"
      body: "*"
    };
  }
}

enum Type {
  plain = 0;
  email = 1;
  sms = 2;
  push = 3;
  telegram = 4;
  whatsapp = 5;
}

enum Status {
  draft = 0;
  pending = 1;
  sent = 2;
  retry = 3;
  failed = 4;
}

message SendRequest {
  Type type = 1;
  map<string, string> payload = 2;
  google.protobuf.Timestamp plannedAt = 3;
  uint64 ttl = 4;
  int64 senderId = 5;
}

message SendResponse {
  int64 id = 1;
  bool sent = 2;
}

message EnqueueResponse {
  int64 id = 1;
}

message CheckRequest {
  int64 id = 1; // Notification ID
}

message CheckResponse {
  Status status = 1; /* Status of Notification */
}
